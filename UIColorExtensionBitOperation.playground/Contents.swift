import UIKit

extension UIColor {
    convenience init(red: Int, green: Int, blue: Int) {
        self.init(red: CGFloat(red) / 255.0, green: CGFloat(green) / 255.0, blue: CGFloat(blue) / 255.0, alpha: 1.0)
    }

    convenience init(rgb: Int) {
        self.init(
            red: (rgb >> 16) & 0xFF,
            green: (rgb >> 8) & 0xFF,
            blue: rgb & 0xFF
        )
    }
}

// #3a294b -> Red: 58, Green: 41, Blue: 75 (0 ~ 255)
UIColor.init(rgb: 0x3a294b)
let a = 0x3a294b // Red: 58, Green: 41, Blue: 75 (0 ~ 255)

// さっと2進数を確認したい場合は、以下のように 16進数から2進数に変換できます
String(0x3a294b, radix: 2)

// 16進数 3a294b を2進数に変換すると以下の通り
//   111010 / 00101001 / 01001011
// ※わかりやすく 8bitごとに区切っています

// 16進数 FFFFFF を2進数に変換すると以下の通り
// 11111111 / 11111111 / 11111111
// ※わかりやすく 8bitごとに区切っています

/*
 Swiftの 0x はプリフィックスで、16進数の定数の前には 0x を付けます。10進数の場合はプリフィックスは不要です。なのでSwiftで let a = 8 と書いた場合は10進数になります。

 */

// 0x3a294b を例に一つずつ見て行くと
let r = (a >> 16) & 0xFF

/*
 0x3a294b >> 16
 >> 右ビットシフトを表すビットシフト演算子なので、
 111010 / 00101001 / 01001011 を 16bit分を右シフトさせると
 000000 / 00000000 / 00111010 となり 111010
 3a の部分が取り出せました
 次に
 0x3a & 0xFF
 これは3aとFFでビットANDすることで最大をFFにするためです。RGBは10進数で255までの値で表したいので、255の16
 111010 と 11111111 の ビットANDをとる。11111111とのビットANDをとると

 00111010
 11111111

 00111010
 となりこれを10進数に変換すると58になり, rは58になりました。
 */

let g = (a >> 8) & 0xFF

/*
 0x3a294b >> 8
 同様に
 111010 / 00101001 / 01001011 を 8bit分を右シフトさせると
 000000 / 00000000 / 00101001 となり 00101001
 29 の部分が取り出せました
 次にこちらも同様に
 0x29 & 0xFF
 00101001 と 11111111 の ビットANDをとると

 00101001
 11111111

 00101001
 となりこれを10進数に変換すると41になり, gは41になりました。
 */


let b = a & 0xFF

/*
 0x3a294b & 0xFF
 b特に右シフトせずに、ビットANDを取っています。
 bは8bit部分つまり4bの部分なので、ビットシフトする必要がありません。
 同様に
 0x4b & 0xFF
 01001011 と 11111111 の ビットANDをとると

 01001011
 11111111

 01001011
 となりこれを10進数に変換すると75になり, bは75になりました。
 */


// こんな感じで順番を入れ替えても同じ結果になります。
let _r = (a & 0xFF0000) >> 16
let _g = (a & 0x00FF00) >> 8
let _b = (a & 0x0000FF)

// 参考文献
// https://qiita.com/HaNoHito/items/ddbcf6e9f15fe8fae901
// https://qiita.com/KentaKudo/items/a1dd2eb0bf37302c1c81

